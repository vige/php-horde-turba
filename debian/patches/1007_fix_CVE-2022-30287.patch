From 784da95e0190321b08ceeb27e2cb6c7505f2057c Mon Sep 17 00:00:00 2001
From: Pascal Rigaux <pascal.rigaux@univ-paris1.fr>
Date: Thu, 2 Jun 2022 13:14:39 +0200
Subject: [PATCH] fix CVE-2022-30287

---
 bin/turba-import-openxchange   |  2 +-
 lib/Api.php                    | 14 +++++++-------
 lib/Application.php            |  4 ++--
 lib/Driver/Share.php           |  2 +-
 lib/Driver/Vbook.php           |  2 +-
 lib/Factory/Driver.php         | 11 ++++++++++-
 lib/Form/CreateAddressBook.php |  2 +-
 lib/Turba.php                  |  2 +-
 8 files changed, 24 insertions(+), 15 deletions(-)

--- a/turba-4.2.23/bin/turba-import-openxchange
+++ b/turba-4.2.23/bin/turba-import-openxchange
@@ -141,7 +141,7 @@
             $cli->message('Address book "' . $abook['label'] . '" not found, creating...');
             $driver = $injector
                 ->getInstance('Turba_Factory_Driver')
-                ->create($sources[$conf['shares']['source']]);
+                ->createTrusted($sources[$conf['shares']['source']]);
             $params = array(
                 'params' => array('source' => $conf['shares']['source']),
                 'name' => $abook['label'],
--- a/turba-4.2.23/lib/Api.php
+++ b/turba-4.2.23/lib/Api.php
@@ -432,7 +432,7 @@
 
         foreach ($this->_getSources($sources) as $source) {
             try {
-                $results = $driver->create($source)->search(array());
+                $results = $driver->createTrusted($source)->search(array());
             } catch (Turba_Exception $e) {
                 throw new Turba_Exception(sprintf(_("Error searching the address book: %s"), $e->getMessage()));
             }
@@ -487,7 +487,7 @@
         }
 
         foreach ($this->_getSources($sources) as $source) {
-            $sdriver = $driver->create($source);
+            $sdriver = $driver->createTrusted($source);
             if (!$isModSeq) {
                 $histories = $history->getByTimestamp(
                     '>', $timestamp, $filter,
@@ -588,11 +588,11 @@
         foreach ($this->_getSources($sources) as $source) {
             if (!$modSeq) {
                 $ts = $history->getActionTimestamp(
-                    'turba:' . $driver->create($source)->getName() . ':' . $uid,
+                    'turba:' . $driver->createTrusted($source)->getName() . ':' . $uid,
                     $action);
             } else {
                 $ts = $history->getActionModSeq(
-                    'turba:' . $driver->create($source)->getName() . ':' . $uid,
+                    'turba:' . $driver->createTrusted($source)->getName() . ':' . $uid,
                     $action);
             }
             if (!empty($ts) && $ts > $last) {
@@ -968,7 +968,7 @@
         $driver = $GLOBALS['injector']->getInstance('Turba_Factory_Driver');
 
         foreach ($this->_getSources($sources) as $source) {
-            $sdriver = $driver->create($source);
+            $sdriver = $driver->createTrusted($source);
 
             if (!$GLOBALS['registry']->isAdmin() &&
                 !$sdriver->hasPermission(Horde_Perms::DELETE)) {
@@ -1199,7 +1199,7 @@
                 );
             }
 
-            $sdriver = $driver->create($source);
+            $sdriver = $driver->createTrusted($source);
             foreach ($names as $name) {
                 $trimname = trim($name);
                 $out = $criteria = array();
@@ -2382,7 +2382,7 @@
             try {
                 $driver = $injector->getInstance('Turba_Factory_Driver');
                 foreach ($this->_getSources($sources) as $source) {
-                    $sdriver = $driver->create($source);
+                    $sdriver = $driver->createTrusted($source);
                     if (!$sdriver->hasPermission(Horde_Perms::READ)) {
                         continue;
                     }
--- a/turba-4.2.23/lib/Application.php
+++ b/turba-4.2.23/lib/Application.php
@@ -357,7 +357,7 @@
                 try {
                     $driver = $GLOBALS['injector']
                         ->getInstance('Turba_Factory_Driver')
-                        ->create($source, $sourceId);
+                        ->createTrusted($source, $sourceId);
                 } catch (Turba_Exception $e) {
                     Horde::log($e, 'ERR');
                     continue;
@@ -397,7 +397,7 @@
             try {
                 $driver = $GLOBALS['injector']
                     ->getInstance('Turba_Factory_Driver')
-                    ->create($config, $share->getName(), $sources);
+                    ->createTrusted($config, $share->getName(), $sources);
             } catch (Turba_Exception $e) {
                 continue;
             }
--- a/turba-4.2.23/lib/Driver/Share.php
+++ b/turba-4.2.23/lib/Driver/Share.php
@@ -44,7 +44,7 @@
     {
         parent::__construct($name, $params);
         $this->_share = $this->_params['config']['params']['share'];
-        $this->_driver = $GLOBALS['injector']->getInstance('Turba_Factory_Driver')->create($this->_params['config'], $name);
+        $this->_driver = $GLOBALS['injector']->getInstance('Turba_Factory_Driver')->createTrusted($this->_params['config'], $name);
         $this->_driver->setContactOwner($this->_getContactOwner());
         $this->_driver->setSourceName($name);
     }
--- a/turba-4.2.23/lib/Driver/Vbook.php
+++ b/turba-4.2.23/lib/Driver/Vbook.php
@@ -55,7 +55,7 @@
         /* Load the underlying driver. */
         $this->_driver = $GLOBALS['injector']
             ->getInstance('Turba_Factory_Driver')
-            ->create($this->_params['source']);
+            ->createTrusted($this->_params['source']);
 
         $this->searchCriteria = empty($this->_params['criteria'])
             ? array()
--- a/turba-4.2.23/lib/Factory/Driver.php
+++ b/turba-4.2.23/lib/Factory/Driver.php
@@ -32,6 +32,15 @@
      */
     private $_instances = array();
 
+    public function create($name)
+    {
+        if (is_array($name)) {
+            error_log("Disallowed for CVE-2022-30287: " . json_encode(debug_backtrace()));
+            die("not allowed");
+        }
+        return $this->createTrusted($name);
+    }
+
     /**
      * Return the Turba_Driver:: instance.
      *
@@ -48,7 +57,7 @@
      * @return Turba_Driver  The singleton instance.
      * @throws Turba_Exception
      */
-    public function create($name, $name2 = '', $cfgSources = array())
+    public function createTrusted($name, $name2 = '', $cfgSources = array())
     {
         if (empty($cfgSources)) {
             $cfgSources = $GLOBALS['cfgSources'];
--- a/turba-4.2.23/lib/Form/CreateAddressBook.php
+++ b/turba-4.2.23/lib/Form/CreateAddressBook.php
@@ -37,7 +37,7 @@
         $cfgSources = Turba::availableSources();
         $driver = $GLOBALS['injector']
             ->getInstance('Turba_Factory_Driver')
-            ->create($cfgSources[$GLOBALS['conf']['shares']['source']]);
+            ->createTrusted($cfgSources[$GLOBALS['conf']['shares']['source']]);
         $params = array(
             'params' => array('source' => $GLOBALS['conf']['shares']['source']),
             'name' => $this->_vars->get('name'),
--- a/turba-4.2.23/lib/Turba.php
+++ b/turba-4.2.23/lib/Turba.php
@@ -431,7 +431,7 @@
 
         foreach ($in as $sourceId => $source) {
             try {
-                $driver = $factory->create($source, $sourceId);
+                $driver = $factory->createTrusted($source, $sourceId);
                 if ($driver->hasPermission($permission) &&
                     (empty($options['require_add']) || $driver->canAdd())) {
                     $out[$sourceId] = $source;
