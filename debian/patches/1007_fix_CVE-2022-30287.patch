From 9f2521328aa7d0dbd905591eca138c8e7580d673 Mon Sep 17 00:00:00 2001
From: Pascal Rigaux <pascal.rigaux@univ-paris1.fr>
Date: Thu, 2 Jun 2022 13:14:39 +0200
Subject: [PATCH] fix CVE-2022-30287

---
 bin/turba-import-openxchange   |  2 +-
 lib/Api.php                    | 14 +++++++-------
 lib/Application.php            |  8 ++++----
 lib/Driver/Share.php           |  2 +-
 lib/Driver/Vbook.php           |  2 +-
 lib/Factory/Driver.php         | 11 ++++++++++-
 lib/Form/CreateAddressBook.php |  2 +-
 lib/Turba.php                  |  2 +-
 8 files changed, 26 insertions(+), 17 deletions(-)

diff --git a/bin/turba-import-openxchange b/bin/turba-import-openxchange
index 2fc05f8f..29dd4ff0 100755
--- a/bin/turba-import-openxchange
+++ b/bin/turba-import-openxchange
@@ -141,7 +141,7 @@ while ($row = fgetcsv($fp, 0, ' ')) {
             $cli->message('Address book "' . $abook['label'] . '" not found, creating...');
             $driver = $injector
                 ->getInstance('Turba_Factory_Driver')
-                ->create($sources[$conf['shares']['source']]);
+                ->createTrusted($sources[$conf['shares']['source']]);
             $params = array(
                 'params' => array('source' => $conf['shares']['source']),
                 'name' => $abook['label'],
diff --git a/lib/Api.php b/lib/Api.php
index f148028b..fc9033f8 100644
--- a/lib/Api.php
+++ b/lib/Api.php
@@ -456,7 +456,7 @@ public function listUids($sources = null)
 
         foreach ($this->_getSources($sources) as $source) {
             try {
-                $results = $driver->create($source)->search(array());
+                $results = $driver->createTrusted($source)->search(array());
             } catch (Turba_Exception $e) {
                 throw new Turba_Exception(sprintf(_("Error searching the address book: %s"), $e->getMessage()));
             }
@@ -511,7 +511,7 @@ public function listBy($action, $timestamp, $sources = null, $end = null, $isMod
         }
 
         foreach ($this->_getSources($sources) as $source) {
-            $sdriver = $driver->create($source);
+            $sdriver = $driver->createTrusted($source);
             if (!$isModSeq) {
                 $histories = $history->getByTimestamp(
                     '>', $timestamp, $filter,
@@ -613,11 +613,11 @@ public function getActionTimestamp($uid, $action, $sources = null, $modSeq = fal
         foreach ($this->_getSources($sources) as $source) {
             if (!$modSeq) {
                 $ts = $history->getActionTimestamp(
-                    'turba:' . $driver->create($source)->getName() . ':' . $uid,
+                    'turba:' . $driver->createTrusted($source)->getName() . ':' . $uid,
                     $action);
             } else {
                 $ts = $history->getActionModSeq(
-                    'turba:' . $driver->create($source)->getName() . ':' . $uid,
+                    'turba:' . $driver->createTrusted($source)->getName() . ':' . $uid,
                     $action);
             }
             if (!empty($ts) && $ts > $last) {
@@ -1032,7 +1032,7 @@ public function delete($uid, $sources = null)
         $driver = $GLOBALS['injector']->getInstance('Turba_Factory_Driver');
 
         foreach ($this->_getSources($sources) as $source) {
-            $sdriver = $driver->create($source);
+            $sdriver = $driver->createTrusted($source);
 
             if (!$GLOBALS['registry']->isAdmin() &&
                 !$sdriver->hasPermission(Horde_Perms::DELETE)) {
@@ -1263,7 +1263,7 @@ public function search($names = null, array $opts = array())
                 );
             }
 
-            $sdriver = $driver->create($source);
+            $sdriver = $driver->createTrusted($source);
             foreach ($names as $name) {
                 $trimname = trim($name);
                 $out = $criteria = array();
@@ -2435,7 +2435,7 @@ public function searchTags($names, $max = 10, $from = 0,
             try {
                 $driver = $injector->getInstance('Turba_Factory_Driver');
                 foreach ($this->_getSources($sources) as $source) {
-                    $sdriver = $driver->create($source);
+                    $sdriver = $driver->createTrusted($source);
                     if (!$sdriver->hasPermission(Horde_Perms::READ)) {
                         continue;
                     }
diff --git a/lib/Application.php b/lib/Application.php
index 6a644afd..4af4490c 100644
--- a/lib/Application.php
+++ b/lib/Application.php
@@ -361,7 +361,7 @@ public function removeUserData($user)
                 try {
                     $driver = $GLOBALS['injector']
                         ->getInstance('Turba_Factory_Driver')
-                        ->create($source, $sourceId);
+                        ->createTrusted($source, $sourceId);
                 } catch (Turba_Exception $e) {
                     Horde::log($e, 'ERR');
                     continue;
@@ -401,7 +401,7 @@ public function removeUserData($user)
             try {
                 $driver = $GLOBALS['injector']
                     ->getInstance('Turba_Factory_Driver')
-                    ->create($config, $share->getName(), $sources);
+                    ->createTrusted($config, $share->getName(), $sources);
             } catch (Turba_Exception $e) {
                 continue;
             }
@@ -547,7 +547,7 @@ public function backup(array $users = array())
             }
 
             foreach ($cfgSources as $sourceId => $source) {
-                $driver = $factory->create($source, $sourceId, $cfgSources);
+                $driver = $factory->createTrusted($source, $sourceId, $cfgSources);
                 if ($driver->getContactOwner() == $registry->getAuth()) {
                     $driver->setContactOwner($user);
                 }
@@ -644,7 +644,7 @@ protected function _restoreContact($contact, $user, $cfgSources, $map)
     {
         global $injector, $registry;
 
-        $driver = $injector->getInstance('Turba_Factory_Driver')->create(
+        $driver = $injector->getInstance('Turba_Factory_Driver')->createTrusted(
             $cfgSources[$contact['addressbook']],
             $contact['addressbook'],
             $cfgSources
diff --git a/lib/Driver/Share.php b/lib/Driver/Share.php
index 4035c9d6..dc060185 100644
--- a/lib/Driver/Share.php
+++ b/lib/Driver/Share.php
@@ -44,7 +44,7 @@ public function __construct($name = '', array $params = array())
     {
         parent::__construct($name, $params);
         $this->_share = $this->_params['config']['params']['share'];
-        $this->_driver = $GLOBALS['injector']->getInstance('Turba_Factory_Driver')->create($this->_params['config'], $name);
+        $this->_driver = $GLOBALS['injector']->getInstance('Turba_Factory_Driver')->createTrusted($this->_params['config'], $name);
         $this->_driver->setContactOwner($this->_getContactOwner());
         $this->_driver->setSourceName($name);
     }
diff --git a/lib/Driver/Vbook.php b/lib/Driver/Vbook.php
index 06ff5a12..df13c873 100644
--- a/lib/Driver/Vbook.php
+++ b/lib/Driver/Vbook.php
@@ -55,7 +55,7 @@ public function __construct($name = '', array $params = array())
         /* Load the underlying driver. */
         $this->_driver = $GLOBALS['injector']
             ->getInstance('Turba_Factory_Driver')
-            ->create($this->_params['source']);
+            ->createTrusted($this->_params['source']);
 
         $this->searchCriteria = empty($this->_params['criteria'])
             ? array()
diff --git a/lib/Factory/Driver.php b/lib/Factory/Driver.php
index 29f54ab9..0bcfccd9 100644
--- a/lib/Factory/Driver.php
+++ b/lib/Factory/Driver.php
@@ -32,6 +32,15 @@ class Turba_Factory_Driver extends Horde_Core_Factory_Base
      */
     private $_instances = array();
 
+    public function create($name)
+    {
+        if (is_array($name)) {
+            error_log("Disallowed for CVE-2022-30287: " . json_encode(debug_backtrace()));
+            die("not allowed");
+        }
+        return $this->createTrusted($name);
+    }
+
     /**
      * Return the Turba_Driver:: instance.
      *
@@ -48,7 +57,7 @@ class Turba_Factory_Driver extends Horde_Core_Factory_Base
      * @return Turba_Driver  The singleton instance.
      * @throws Turba_Exception
      */
-    public function create($name, $name2 = '', $cfgSources = array())
+    public function createTrusted($name, $name2 = '', $cfgSources = array())
     {
         if (empty($cfgSources)) {
             $cfgSources = $GLOBALS['cfgSources'];
diff --git a/lib/Form/CreateAddressBook.php b/lib/Form/CreateAddressBook.php
index 496e7f2b..83d2faad 100644
--- a/lib/Form/CreateAddressBook.php
+++ b/lib/Form/CreateAddressBook.php
@@ -37,7 +37,7 @@ public function execute()
         $cfgSources = Turba::availableSources();
         $driver = $GLOBALS['injector']
             ->getInstance('Turba_Factory_Driver')
-            ->create($cfgSources[$GLOBALS['conf']['shares']['source']]);
+            ->createTrusted($cfgSources[$GLOBALS['conf']['shares']['source']]);
         $params = array(
             'params' => array('source' => $GLOBALS['conf']['shares']['source']),
             'name' => $this->_vars->get('name'),
diff --git a/lib/Turba.php b/lib/Turba.php
index 92f0b3d7..0f04e1e9 100644
--- a/lib/Turba.php
+++ b/lib/Turba.php
@@ -465,7 +465,7 @@ public static function permissionsFilter(array $in,
                 continue;
             }
             try {
-                $driver = $factory->create($source, $sourceId);
+                $driver = $factory->createTrusted($source, $sourceId);
                 if ($driver->hasPermission($permission) &&
                     (empty($options['require_add']) || $driver->canAdd())) {
                     $out[$sourceId] = $source;
